(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{480:function(s,a,t){"use strict";t.r(a);var n=t(11),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[s._v("#")]),s._v(" 面试题")]),s._v(" "),a("p",[s._v("Redis 都有哪些数据类型？分别在哪些场景下使用比较合适？")]),s._v(" "),a("h2",{attrs:{id:"面试官心理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试官心理分析"}},[s._v("#")]),s._v(" 面试官心理分析")]),s._v(" "),a("p",[s._v("除非是面试官感觉看你简历，是工作 3 年以内的比较初级的同学，可能对技术没有很深入的研究，面试官才会问这类问题。否则，在宝贵的面试时间里，面试官实在不想多问。")]),s._v(" "),a("p",[s._v("其实问这个问题，主要有两个原因：")]),s._v(" "),a("ul",[a("li",[s._v("看看你到底有没有全面的了解 Redis 有哪些功能，一般怎么来用，啥场景用什么，就怕你别就会最简单的 KV 操作；")]),s._v(" "),a("li",[s._v("看看你在实际项目里都怎么玩儿过 Redis。")])]),s._v(" "),a("p",[s._v("要是你回答的不好，没说出几种数据类型，也没说什么场景，你完了，面试官对你印象肯定不好，觉得你平时就是做个简单的 set 和 get。")]),s._v(" "),a("h2",{attrs:{id:"面试题剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题剖析"}},[s._v("#")]),s._v(" 面试题剖析")]),s._v(" "),a("p",[s._v("Redis 主要有以下几种数据类型：")]),s._v(" "),a("ul",[a("li",[s._v("Strings")]),s._v(" "),a("li",[s._v("Hashes")]),s._v(" "),a("li",[s._v("Lists")]),s._v(" "),a("li",[s._v("Sets")]),s._v(" "),a("li",[s._v("Sorted Sets")])]),s._v(" "),a("blockquote",[a("p",[s._v("Redis 除了这 5 种数据类型之外，还有 Bitmaps、HyperLogLogs、Streams 等。")])]),s._v(" "),a("h3",{attrs:{id:"strings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[s._v("#")]),s._v(" Strings")]),s._v(" "),a("p",[s._v("这是最简单的类型，就是普通的 set 和 get，做简单的 KV 缓存。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" college szu\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"hashes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashes"}},[s._v("#")]),s._v(" Hashes")]),s._v(" "),a("p",[s._v("这个是类似 map 的一种结构，这个一般就是可以将结构化的数据，比如一个对象（前提是"),a("strong",[s._v("这个对象没嵌套其他的对象")]),s._v("）给缓存在 Redis 里，然后每次读写缓存的时候，可以就操作 hash 里的"),a("strong",[s._v("某个字段")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hset person name bingo\nhset person age "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\nhset person "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nhget person name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("(person = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bingo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(")\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"lists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lists"}},[s._v("#")]),s._v(" Lists")]),s._v(" "),a("p",[s._v("Lists 是有序列表，这个可以玩儿出很多花样。")]),s._v(" "),a("p",[s._v("比如可以通过 list 存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的东西。")]),s._v(" "),a("p",[s._v("比如可以通过 lrange 命令，读取某个闭区间内的元素，可以基于 list 实现分页查询，这个是很棒的一个功能，基于 Redis 实现简单的高性能分页，可以做类似微博那种下拉不断分页的东西，性能高，就一页一页走。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0开始位置，-1结束位置，结束位置为-1时，表示列表的最后一个位置，即查看所有。")]),s._v("\nlrange mylist "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("比如可以搞个简单的消息队列，从 list 头怼进去，从 list 尾巴那里弄出来。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("lpush mylist "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nlpush mylist "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nlpush mylist "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1")]),s._v("\nrpop mylist\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"sets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sets"}},[s._v("#")]),s._v(" Sets")]),s._v(" "),a("p",[s._v("Sets 是无序集合，自动去重。")]),s._v(" "),a("p",[s._v("直接基于 set 将系统里需要去重的数据扔进去，自动就给去重了，如果你需要对一些数据进行快速的全局去重，你当然也可以基于 jvm 内存里的 HashSet 进行去重，但是如果你的某个系统部署在多台机器上呢？得基于 Redis 进行全局的 set 去重。")]),s._v(" "),a("p",[s._v("可以基于 set 玩儿交集、并集、差集的操作，比如交集吧，可以把两个人的粉丝列表整一个交集，看看俩人的共同好友是谁？对吧。")]),s._v(" "),a("p",[s._v("把两个大 V 的粉丝都放在两个 set 中，对两个 set 做交集。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#-------操作一个set-------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加元素")]),s._v("\nsadd mySet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看全部元素")]),s._v("\nsmembers mySet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断是否包含某个值")]),s._v("\nsismember mySet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除某个/些元素")]),s._v("\nsrem mySet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsrem mySet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看元素个数")]),s._v("\nscard mySet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机删除一个元素")]),s._v("\nspop mySet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#-------操作多个set-------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将一个set的元素移动到另外一个set")]),s._v("\nsmove yourSet mySet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 求两set的交集")]),s._v("\nsinter yourSet mySet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 求两set的并集")]),s._v("\nsunion yourSet mySet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 求在yourSet中而不在mySet中的元素")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sdiff")]),s._v(" yourSet mySet\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("h3",{attrs:{id:"sorted-sets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sorted-sets"}},[s._v("#")]),s._v(" Sorted Sets")]),s._v(" "),a("p",[s._v("Sorted Sets 是排序的 set，去重但可以排序，写进去的时候给一个分数，自动根据分数排序。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("zadd board "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("85")]),s._v(" zhangsan\nzadd board "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),s._v(" lisi\nzadd board "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("96")]),s._v(" wangwu\nzadd board "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v(" zhaoliu\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取排名前三的用户（默认是升序，所以需要 rev 改为降序）")]),s._v("\nzrevrange board "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取某用户的排名")]),s._v("\nzrank board zhaoliu\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);